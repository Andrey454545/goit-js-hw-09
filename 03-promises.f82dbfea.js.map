{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,kBAASC,EAAcC,EAAUC,GACTC,KAAKC,Q,CAUf,MAARC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAId,SAAfP,EAAcC,EAAUU,GAe7B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KAElCC,YAAW,KACeZ,KAAKC,SAAW,GAGlCS,EAAQ,C,SAAEZ,EAAUC,MAAAS,IAEpBG,EAAO,C,SAAEb,EAAUC,MAAAS,GAAQ,GAEhCA,EAAM,G,CAhBQL,SAASC,cAAc,yBAqB/BS,iBAAiB,SAASC,IACvCA,EAAEC,iBAEsB,IAApBC,EAAaC,OAAOZ,EAAMa,OACdD,OAAOX,EAAKY,OAGG,IAA1B,IAAIC,EAAI,EAAGA,EAAIZ,EAAOW,MAAOC,GAAK,EAGmBtB,EAA5C,EAAIsB,EAAGH,EAAaG,EAAIC,WACjCC,MAAK,EAACvB,SAAEA,EAAUC,MAAAuB,MAGfC,EAAA5B,GAAS6B,OAAOC,QACZ,qBAAqB3B,QAAewB,MACvC,IAEJI,OAAM,EAAC5B,SAAEA,EAAUC,MAAA4B,MAEhBJ,EAAA5B,GAAS6B,OAAOI,QACZ,oBAAoB9B,QAAe6B,MACtC,IAGTzB,EAAK2B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\nimport Notiflix from 'notiflix';\n\n// пошук елементів\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\n// ф-ція для створення обіцянки\nfunction createPromise(position, delay) {\n    // регістрація callback\n    // коли promise виконається успішно виклич resolve, коли з помилкою тоді reject\n    const promise = new Promise((resolve, reject) => {\n\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3; // якщо true виконується if і викликається resolve\n\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n    return promise;\n}\n// додавання слухача події для кнопки\nbtnCreatePromise.addEventListener('click', e => {\n    e.preventDefault(); // відміна оновлення сторінки\n\n    let firstDelay = Number(delay.value);   // конвертація затримки в число\n    let firstStep = Number(step.value);   // конвертація кроку в число\n\n    // цикл для перебору кількості введень\n    for (let i = 0; i < amount.value; i += 1) {\n\n    // передача: номера промісу, першу затримку, введену користувачем і крок\n    createPromise(1 + i, firstDelay + i * delayStep)\n        .then(({ position, delay }) => {\n\n            // відображення повідомлення успіху користувачеві з бібліотеки Notiflix\n            Notiflix.Notify.success(\n                `Fulfilled promise ${position} in ${delay}ms`\n            );\n        })\n        .catch(({ position, delay }) => {\n            // відображення повідомлення помилки користувачеві з бібліотеки Notiflix\n            Notiflix.Notify.failure(\n                `Rejected promise ${position} in ${delay}ms`\n            );\n        });\n    }\n    form.reset(); // очищення поля форми\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","delay1","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","i","delayStep","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","reset"],"version":3,"file":"03-promises.f82dbfea.js.map"}